warning: unused import: `crate::models::message::HomaMessage`
 --> src/actors/application_registrar.rs:7:5
  |
7 | use crate::models::message::HomaMessage;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `constants::HOMA_SOCKET_PATH`
 --> src/actors/application_registrar.rs:9:58
  |
9 |     actors::application_writer::ApplicationWriterHandle, constants::HOMA_SOCKET_PATH,
  |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `UnixListener`, `fs`
  --> src/actors/application_registrar.rs:14:5
   |
14 |     fs,
   |     ^^
15 |     os::unix::net::{UnixListener, UnixStream},
   |                     ^^^^^^^^^^^^

warning: unused import: `crate::actors::application::ApplicationMessage::*`
  --> src/actors/message_sender.rs:57:9
   |
57 |     use crate::actors::application::ApplicationMessage::*;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `rc::Rc`
 --> src/actors/workload_manager.rs:4:5
  |
4 |     rc::Rc,
  |     ^^^^^^

warning: unused imports: `Ipv4Packet`, `Ipv4`
 --> src/models/datagram.rs:5:26
  |
5 | use pnet::packet::ipv4::{Ipv4, Ipv4Packet, MutableIpv4Packet};
  |                          ^^^^  ^^^^^^^^^^

warning: unused import: `std::io::Error`
 --> src/models/message.rs:5:5
  |
5 | use std::io::Error;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::iter::StepBy`
 --> src/models/message.rs:6:5
  |
6 | use std::iter::StepBy;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
 --> src/models/message.rs:8:5
  |
8 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^

warning: variable does not need to be mutable
  --> src/actors/application_listener.rs:21:29
   |
21 | fn run_application_listener(mut application_listener: ApplicationListener) {
   |                             ----^^^^^^^^^^^^^^^^^^^^
   |                             |
   |                             help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `datagram`
  --> src/models/message.rs:87:36
   |
87 |     pub fn add_datagram(&mut self, datagram: &HomaDatagram) {}
   |                                    ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_datagram`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: field `priority_manager_handle` is never read
  --> src/actors/message_receiver.rs:22:5
   |
19 | struct MessageReceiver {
   |        --------------- field in this struct
...
22 |     priority_manager_handle: PriorityManagerHandle,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: method `priority` is never used
  --> src/actors/message_receiver.rs:43:12
   |
37 | impl MessageReceiver {
   | -------------------- method in this implementation
...
43 |     pub fn priority(&self) -> u8 {
   |            ^^^^^^^^

warning: field `application_handle` is never read
  --> src/actors/message_sender.rs:13:5
   |
9  | struct MessageSender {
   |        ------------- field in this struct
...
13 |     application_handle: ApplicationHandle,
   |     ^^^^^^^^^^^^^^^^^^

warning: unused `Result` that must be used
  --> src/actors/application_listener.rs:14:9
   |
14 |         fs::remove_file(HOMA_SOCKET_PATH);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
   |
14 |         let _ = fs::remove_file(HOMA_SOCKET_PATH);
   |         +++++++

warning: unused `Result` that must be used
  --> src/actors/application_reader.rs:33:5
   |
33 |     application_reader.stream.shutdown(std::net::Shutdown::Both);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
help: use `let _ = ...` to ignore the resulting value
   |
33 |     let _ = application_reader.stream.shutdown(std::net::Shutdown::Both);
   |     +++++++

warning: `homad` (lib) generated 16 warnings (run `cargo fix --lib -p homad` to apply 11 suggestions)
warning: unused import: `application_registrar::ApplicationRegistrar`
  --> src/main.rs:10:37
   |
10 |     application::ApplicationHandle, application_registrar::ApplicationRegistrar,
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: multiple fields are never read
  --> src/models/datagram.rs:83:5
   |
82 | pub struct HomaDatagramCollector {
   |            --------------------- fields in this struct
83 |     message_id: u64,
   |     ^^^^^^^^^^
84 |     source_address: [u8; 4],
   |     ^^^^^^^^^^^^^^
85 |     destination_address: [u8; 4],
   |     ^^^^^^^^^^^^^^^^^^^
86 |     source_id: u32,
   |     ^^^^^^^^^
87 |     destination_id: u32,
   |     ^^^^^^^^^^^^^^
88 |     expected: u64,
   |     ^^^^^^^^
89 |     collected: u64,
   |     ^^^^^^^^^
90 |     content: Vec<u8>,
   |     ^^^^^^^

warning: associated items `new`, `add`, `priority`, `is_complete`, and `to_message` are never used
   --> src/models/datagram.rs:94:12
    |
93  | impl HomaDatagramCollector {
    | -------------------------- associated items in this implementation
94  |     pub fn new(datagram: &HomaDatagram) -> Self {
    |            ^^^
...
108 |     pub fn add(&mut self, datagram: &HomaDatagram) {
    |            ^^^
...
116 |     pub fn priority(&self) -> u8 {
    |            ^^^^^^^^
...
125 |     pub fn is_complete(&self) -> bool {
    |            ^^^^^^^^^^^
...
129 |     pub fn to_message(self) -> HomaMessage {
    |            ^^^^^^^^^^

warning: associated items `from_datagram` and `add_datagram` are never used
  --> src/models/message.rs:75:12
   |
26 | impl HomaMessage {
   | ---------------- associated items in this implementation
...
75 |     pub fn from_datagram(datagram: &HomaDatagram) -> Self {
   |            ^^^^^^^^^^^^^
...
87 |     pub fn add_datagram(&mut self, datagram: &HomaDatagram) {}
   |            ^^^^^^^^^^^^

warning: function `ipv4_string_to_bytes` is never used
 --> src/utils.rs:3:8
  |
3 | pub fn ipv4_string_to_bytes(ipv4: &str) -> Result<[u8; 4], sscanf::Error> {
  |        ^^^^^^^^^^^^^^^^^^^^

warning: `homad` (bin "homad") generated 21 warnings (16 duplicates) (run `cargo fix --bin "homad"` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 0.02s
     Running `target/debug/homad`
